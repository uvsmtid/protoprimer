run-name: "${{ github.workflow }}: ${{ github.actor }}: ${{ github.event_name }}: ${{ github.ref_name }}: ${{ github.ref_type }}"
on:
    push:
        branches:
        -   "*"
    pull_request:
        branches:
        -   "*"
jobs:
    bootstrap_scenarios:
        runs-on: ubuntu-latest

        steps:
            -   run: "echo runner.os: ${{ runner.os }}"
            -   run: "echo github.repository: ${{ github.repository }}"
            -   run: "echo github.ref: ${{ github.ref }}"

            -   uses: actions/setup-python@v5
                with:
                    # FT_84_11_73_28: supported python versions:
                    python-version: 3.14

            -   run: "python -c \"import sys; print(sys.version);\""

            -   uses: actions/checkout@v4

            -   run: "${{ github.workspace }}/prime"
            -   run: "${{ github.workspace }}/cmd/bootstrap_env"

            -   name: ensure git has no local changes and untracked files
                run: |
                    git diff || true
                    git status --porcelain || true
                    test -z "$(git status --porcelain)"

            -   name: generate coverage

                run: |
                    ${{ github.workspace }}/venv/bin/coverage erase         --rcfile=${{ github.workspace }}/gconf/coveragerc.ini
                    ${{ github.workspace }}/venv/bin/coverage run           --rcfile=${{ github.workspace }}/gconf/coveragerc.ini --module pytest ${{ github.workspace }}/src/neoprimer/test/
                    ${{ github.workspace }}/venv/bin/coverage run           --rcfile=${{ github.workspace }}/gconf/coveragerc.ini --module pytest ${{ github.workspace }}/src/protoprimer/test/
                    ${{ github.workspace }}/venv/bin/coverage combine       --rcfile=${{ github.workspace }}/gconf/coveragerc.ini

            -   name: report coverage
                run: |
                    ${{ github.workspace }}/venv/bin/coverage report        --rcfile=${{ github.workspace }}/gconf/coveragerc.ini

            -   name: convert coverage
                run: |
                    ${{ github.workspace }}/venv/bin/coverage xml           --rcfile=${{ github.workspace }}/gconf/coveragerc.ini

            -   name: coveralls.io
                env:
                    COVERALLS_REPO_TOKEN: "${{ secrets.COVERALLS_REPO_TOKEN }}"
                uses: coverallsapp/github-action@v2

            -   run: "echo job.status: ${{ job.status }}"
